/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 19 22:01:46 GMT 2017
 */

package evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import models.EContinente;
import models.InscricaoAberta;
import models.InscricaoLimitada;
import models.Usuario;
import models.Viagem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Viagem_ESTest extends Viagem_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 18 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.getSenha()Ljava/lang/String;: root-Branch
   * Goal 4. Branch models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setSenha(Ljava/lang/String;)V
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.getSenha()Ljava/lang/String;: root-Branch in context: models.Viagem:getSenha()Ljava/lang/String;
   * Goal 7. [Output]: models.Viagem.getSenha()Ljava/lang/String;:NonEmptyString
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.getSenha()Ljava/lang/String;: Line 160
   * Goal 11. models.Viagem.setSenha(Ljava/lang/String;)V: Line 164
   * Goal 12. models.Viagem.setSenha(Ljava/lang/String;)V: Line 165
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.getSenha()Ljava/lang/String;
   * Goal 15. [METHOD] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 16. [METHODNOEX] models.Viagem.<init>()V
   * Goal 17. [METHODNOEX] models.Viagem.getSenha()Ljava/lang/String;
   * Goal 18. [METHODNOEX] models.Viagem.setSenha(Ljava/lang/String;)V
   */

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setSenha("UBIT");
      String string0 = viagem0.getSenha();
      assertEquals("UBIT", string0);
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.getSenha()Ljava/lang/String;: root-Branch
   * Goal 4. Branch models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setSenha(Ljava/lang/String;)V
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.getSenha()Ljava/lang/String;: root-Branch in context: models.Viagem:getSenha()Ljava/lang/String;
   * Goal 7. [Output]: models.Viagem.getSenha()Ljava/lang/String;:EmptyString
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.getSenha()Ljava/lang/String;: Line 160
   * Goal 11. models.Viagem.setSenha(Ljava/lang/String;)V: Line 164
   * Goal 12. models.Viagem.setSenha(Ljava/lang/String;)V: Line 165
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.getSenha()Ljava/lang/String;
   * Goal 15. [METHOD] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 16. [METHODNOEX] models.Viagem.<init>()V
   * Goal 17. [METHODNOEX] models.Viagem.getSenha()Ljava/lang/String;
   * Goal 18. [METHODNOEX] models.Viagem.setSenha(Ljava/lang/String;)V
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setSenha("");
      String string0 = viagem0.getSenha();
      assertEquals("", string0);
  }

  //Test case number: 2
  /*
   * 25 covered goals:
   * Goal 1. models.Viagem.getParticipantes()Ljava/util/List;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - true
   * Goal 4. models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - false
   * Goal 5. Branch models.Viagem.getParticipantes()Ljava/util/List;: root-Branch in context: models.Viagem:getParticipantes()Ljava/util/List;
   * Goal 6. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 7. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - false in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 8. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - true in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 9. [Output]: models.Viagem.getParticipantes()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:False
   * Goal 10. [Output]: models.Viagem.getParticipantes()Ljava/util/List;:NonNull:java.util.List:size()I:Positive
   * Goal 11. models.Viagem.<init>()V: Line 70
   * Goal 12. models.Viagem.<init>()V: Line 71
   * Goal 13. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 176
   * Goal 14. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 177
   * Goal 15. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 179
   * Goal 16. models.Viagem.getParticipantes()Ljava/util/List;: Line 144
   * Goal 17. [METHOD] models.Viagem.<init>()V
   * Goal 18. [METHOD] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 19. [METHOD] models.Viagem.getParticipantes()Ljava/util/List;
   * Goal 20. [METHODNOEX] models.Viagem.<init>()V
   * Goal 21. [METHODNOEX] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 22. [METHODNOEX] models.Viagem.getParticipantes()Ljava/util/List;
   * Goal 23. Weak Mutation 15: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator <= -> ==
   * Goal 24. Weak Mutation 18: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 19: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Usuario usuario0 = new Usuario();
      viagem0.addParticipante(usuario0);
      List<Usuario> list0 = viagem0.getParticipantes();
      assertFalse(list0.isEmpty());
  }

  //Test case number: 3
  /*
   * 18 covered goals:
   * Goal 1. models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.getLocal()Ljava/lang/String;: root-Branch
   * Goal 4. Branch models.Viagem.getLocal()Ljava/lang/String;: root-Branch in context: models.Viagem:getLocal()Ljava/lang/String;
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setLocal(Ljava/lang/String;)V
   * Goal 7. [Output]: models.Viagem.getLocal()Ljava/lang/String;:NonEmptyString
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.getLocal()Ljava/lang/String;: Line 112
   * Goal 11. models.Viagem.setLocal(Ljava/lang/String;)V: Line 116
   * Goal 12. models.Viagem.setLocal(Ljava/lang/String;)V: Line 117
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.getLocal()Ljava/lang/String;
   * Goal 15. [METHOD] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 16. [METHODNOEX] models.Viagem.<init>()V
   * Goal 17. [METHODNOEX] models.Viagem.getLocal()Ljava/lang/String;
   * Goal 18. [METHODNOEX] models.Viagem.setLocal(Ljava/lang/String;)V
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setLocal("Senha inv\u00E1lida. Tente novamente.");
      String string0 = viagem0.getLocal();
      assertEquals("Senha inv\u00E1lida. Tente novamente.", string0);
  }

  //Test case number: 4
  /*
   * 18 covered goals:
   * Goal 1. models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.getLocal()Ljava/lang/String;: root-Branch
   * Goal 4. Branch models.Viagem.getLocal()Ljava/lang/String;: root-Branch in context: models.Viagem:getLocal()Ljava/lang/String;
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setLocal(Ljava/lang/String;)V
   * Goal 7. [Output]: models.Viagem.getLocal()Ljava/lang/String;:EmptyString
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.getLocal()Ljava/lang/String;: Line 112
   * Goal 11. models.Viagem.setLocal(Ljava/lang/String;)V: Line 116
   * Goal 12. models.Viagem.setLocal(Ljava/lang/String;)V: Line 117
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.getLocal()Ljava/lang/String;
   * Goal 15. [METHOD] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 16. [METHODNOEX] models.Viagem.<init>()V
   * Goal 17. [METHODNOEX] models.Viagem.getLocal()Ljava/lang/String;
   * Goal 18. [METHODNOEX] models.Viagem.setLocal(Ljava/lang/String;)V
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setLocal("");
      String string0 = viagem0.getLocal();
      assertEquals("", string0);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;: root-Branch
   * Goal 2. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 3. models.Viagem.<init>()V: root-Branch
   * Goal 4. Branch models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;: root-Branch in context: models.Viagem:getInscricaoStrategy()Lmodels/InscricaoStrategy;
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 7. [Output]: models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;:NonNull
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;: Line 168
   * Goal 11. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 12. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;
   * Goal 15. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 16. [METHODNOEX] models.Viagem.<init>()V
   * Goal 17. [METHODNOEX] models.Viagem.getInscricaoStrategy()Lmodels/InscricaoStrategy;
   * Goal 18. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      InscricaoLimitada inscricaoLimitada0 = new InscricaoLimitada();
      viagem0.setInscricaoStrategy(inscricaoLimitada0);
      InscricaoLimitada inscricaoLimitada1 = (InscricaoLimitada)viagem0.getInscricaoStrategy();
      assertTrue(inscricaoLimitada1.exigeSenha());
  }

  //Test case number: 6
  /*
   * 23 covered goals:
   * Goal 1. models.Viagem.getId()Ljava/lang/Long;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.setId(Ljava/lang/Long;)V: root-Branch
   * Goal 4. Branch models.Viagem.setId(Ljava/lang/Long;)V: root-Branch in context: models.Viagem:setId(Ljava/lang/Long;)V
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.getId()Ljava/lang/Long;: root-Branch in context: models.Viagem:getId()Ljava/lang/Long;
   * Goal 7. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:byteValue()B:Zero
   * Goal 8. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:doubleValue()D:Zero
   * Goal 9. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:floatValue()F:Zero
   * Goal 10. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:intValue()I:Zero
   * Goal 11. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:longValue()J:Zero
   * Goal 12. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:shortValue()S:Zero
   * Goal 13. models.Viagem.<init>()V: Line 70
   * Goal 14. models.Viagem.<init>()V: Line 71
   * Goal 15. models.Viagem.getId()Ljava/lang/Long;: Line 83
   * Goal 16. models.Viagem.setId(Ljava/lang/Long;)V: Line 87
   * Goal 17. models.Viagem.setId(Ljava/lang/Long;)V: Line 88
   * Goal 18. [METHOD] models.Viagem.<init>()V
   * Goal 19. [METHOD] models.Viagem.getId()Ljava/lang/Long;
   * Goal 20. [METHOD] models.Viagem.setId(Ljava/lang/Long;)V
   * Goal 21. [METHODNOEX] models.Viagem.<init>()V
   * Goal 22. [METHODNOEX] models.Viagem.getId()Ljava/lang/Long;
   * Goal 23. [METHODNOEX] models.Viagem.setId(Ljava/lang/Long;)V
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Long long0 = new Long(0L);
      viagem0.setId(long0);
      Long long1 = viagem0.getId();
      assertEquals(0L, (long)long1);
  }

  //Test case number: 7
  /*
   * 23 covered goals:
   * Goal 1. models.Viagem.getId()Ljava/lang/Long;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.setId(Ljava/lang/Long;)V: root-Branch
   * Goal 4. Branch models.Viagem.setId(Ljava/lang/Long;)V: root-Branch in context: models.Viagem:setId(Ljava/lang/Long;)V
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.getId()Ljava/lang/Long;: root-Branch in context: models.Viagem:getId()Ljava/lang/Long;
   * Goal 7. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:byteValue()B:Positive
   * Goal 8. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:doubleValue()D:Positive
   * Goal 9. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:floatValue()F:Positive
   * Goal 10. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:intValue()I:Positive
   * Goal 11. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:longValue()J:Positive
   * Goal 12. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:shortValue()S:Positive
   * Goal 13. models.Viagem.<init>()V: Line 70
   * Goal 14. models.Viagem.<init>()V: Line 71
   * Goal 15. models.Viagem.getId()Ljava/lang/Long;: Line 83
   * Goal 16. models.Viagem.setId(Ljava/lang/Long;)V: Line 87
   * Goal 17. models.Viagem.setId(Ljava/lang/Long;)V: Line 88
   * Goal 18. [METHOD] models.Viagem.<init>()V
   * Goal 19. [METHOD] models.Viagem.getId()Ljava/lang/Long;
   * Goal 20. [METHOD] models.Viagem.setId(Ljava/lang/Long;)V
   * Goal 21. [METHODNOEX] models.Viagem.<init>()V
   * Goal 22. [METHODNOEX] models.Viagem.getId()Ljava/lang/Long;
   * Goal 23. [METHODNOEX] models.Viagem.setId(Ljava/lang/Long;)V
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Long long0 = new Long(1L);
      viagem0.setId(long0);
      Long long1 = viagem0.getId();
      assertEquals(1L, (long)long1);
  }

  //Test case number: 8
  /*
   * 23 covered goals:
   * Goal 1. models.Viagem.getId()Ljava/lang/Long;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.setId(Ljava/lang/Long;)V: root-Branch
   * Goal 4. Branch models.Viagem.setId(Ljava/lang/Long;)V: root-Branch in context: models.Viagem:setId(Ljava/lang/Long;)V
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.getId()Ljava/lang/Long;: root-Branch in context: models.Viagem:getId()Ljava/lang/Long;
   * Goal 7. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:byteValue()B:Negative
   * Goal 8. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:doubleValue()D:Negative
   * Goal 9. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:floatValue()F:Negative
   * Goal 10. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:intValue()I:Negative
   * Goal 11. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:longValue()J:Negative
   * Goal 12. [Output]: models.Viagem.getId()Ljava/lang/Long;:NonNull:java.lang.Long:shortValue()S:Negative
   * Goal 13. models.Viagem.<init>()V: Line 70
   * Goal 14. models.Viagem.<init>()V: Line 71
   * Goal 15. models.Viagem.getId()Ljava/lang/Long;: Line 83
   * Goal 16. models.Viagem.setId(Ljava/lang/Long;)V: Line 87
   * Goal 17. models.Viagem.setId(Ljava/lang/Long;)V: Line 88
   * Goal 18. [METHOD] models.Viagem.<init>()V
   * Goal 19. [METHOD] models.Viagem.getId()Ljava/lang/Long;
   * Goal 20. [METHOD] models.Viagem.setId(Ljava/lang/Long;)V
   * Goal 21. [METHODNOEX] models.Viagem.<init>()V
   * Goal 22. [METHODNOEX] models.Viagem.getId()Ljava/lang/Long;
   * Goal 23. [METHODNOEX] models.Viagem.setId(Ljava/lang/Long;)V
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Long long0 = new Long((-1L));
      viagem0.setId(long0);
      Long long1 = viagem0.getId();
      assertEquals((-1L), (long)long1);
  }

  //Test case number: 9
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.getDescricao()Ljava/lang/String;: root-Branch
   * Goal 3. Branch models.Viagem.getDescricao()Ljava/lang/String;: root-Branch in context: models.Viagem:getDescricao()Ljava/lang/String;
   * Goal 4. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 5. [Output]: models.Viagem.getDescricao()Ljava/lang/String;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getDescricao()Ljava/lang/String;: Line 136
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getDescricao()Ljava/lang/String;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getDescricao()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      String string0 = viagem0.getDescricao();
      assertNull(string0);
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 3. inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 4. models.Viagem.<init>()V: Line 70
   * Goal 5. models.Viagem.<init>()V: Line 71
   * Goal 6. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 74
   * Goal 7. [METHOD] models.Viagem.<init>()V
   * Goal 8. [METHOD] models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 9. [METHODNOEX] models.Viagem.<init>()V
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Usuario usuario0 = new Usuario();
      // Undeclared exception!
      try { 
        viagem0.inscreverParticipante(usuario0, "@R)<S#M%$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("models.Viagem", e);
      }
  }

  //Test case number: 11
  /*
   * 19 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - true
   * Goal 3. models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - false
   * Goal 4. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 5. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - false in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 6. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - true in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 7. addParticipante(Lmodels/Usuario;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 176
   * Goal 11. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 177
   * Goal 12. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 179
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 15. [METHODNOEX] models.Viagem.<init>()V
   * Goal 16. [METHODNOEX] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 17. Weak Mutation 15: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator <= -> ==
   * Goal 18. Weak Mutation 18: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 19: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Usuario usuario0 = new Usuario();
      viagem0.addParticipante((Usuario) null);
      // Undeclared exception!
      try { 
        viagem0.addParticipante(usuario0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 12
  /*
   * 91 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - true
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false
   * Goal 19. models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true
   * Goal 20. models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false
   * Goal 21. models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - false
   * Goal 22. Branch models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setSenha(Ljava/lang/String;)V
   * Goal 23. Branch models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDataInicio(Ljava/lang/String;)V
   * Goal 24. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 38. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 39. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 40. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 41. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 42. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 43. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 44. models.Viagem.<init>()V: Line 70
   * Goal 45. models.Viagem.<init>()V: Line 71
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 229
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 58. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 59. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 60. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 61. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 62. models.Viagem.equals(Ljava/lang/Object;)Z: Line 254
   * Goal 63. models.Viagem.equals(Ljava/lang/Object;)Z: Line 260
   * Goal 64. models.Viagem.equals(Ljava/lang/Object;)Z: Line 261
   * Goal 65. models.Viagem.equals(Ljava/lang/Object;)Z: Line 262
   * Goal 66. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 124
   * Goal 67. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 125
   * Goal 68. models.Viagem.setSenha(Ljava/lang/String;)V: Line 164
   * Goal 69. models.Viagem.setSenha(Ljava/lang/String;)V: Line 165
   * Goal 70. [METHOD] models.Viagem.<init>()V
   * Goal 71. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 72. [METHOD] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 73. [METHOD] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 74. [METHODNOEX] models.Viagem.<init>()V
   * Goal 75. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 76. [METHODNOEX] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 77. [METHODNOEX] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 78. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 79. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 80. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 81. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 82. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 84. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 85. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 86. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 87. Weak Mutation 158: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceVariable other -> this
   * Goal 88. Weak Mutation 159: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceComparisonOperator > -> -2
   * Goal 89. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 90. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 91. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setDataInicio("34976 I(3'glS");
      Viagem viagem1 = new Viagem();
      viagem1.setSenha("");
      viagem1.setDataInicio("34976 I(3'glS");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 13
  /*
   * 91 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - true
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false
   * Goal 19. models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true
   * Goal 20. models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - true
   * Goal 21. models.Viagem.equals(Ljava/lang/Object;)Z: I219 Branch 36 IFGT L264 - false
   * Goal 22. Branch models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setSenha(Ljava/lang/String;)V
   * Goal 23. Branch models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDataInicio(Ljava/lang/String;)V
   * Goal 24. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 38. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 39. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 40. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 41. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 42. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I219 Branch 36 IFGT L264 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 43. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 44. models.Viagem.<init>()V: Line 70
   * Goal 45. models.Viagem.<init>()V: Line 71
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 229
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 58. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 59. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 60. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 61. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 62. models.Viagem.equals(Ljava/lang/Object;)Z: Line 254
   * Goal 63. models.Viagem.equals(Ljava/lang/Object;)Z: Line 260
   * Goal 64. models.Viagem.equals(Ljava/lang/Object;)Z: Line 264
   * Goal 65. models.Viagem.equals(Ljava/lang/Object;)Z: Line 265
   * Goal 66. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 124
   * Goal 67. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 125
   * Goal 68. models.Viagem.setSenha(Ljava/lang/String;)V: Line 164
   * Goal 69. models.Viagem.setSenha(Ljava/lang/String;)V: Line 165
   * Goal 70. [METHOD] models.Viagem.<init>()V
   * Goal 71. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 72. [METHOD] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 73. [METHOD] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 74. [METHODNOEX] models.Viagem.<init>()V
   * Goal 75. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 76. [METHODNOEX] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 77. [METHODNOEX] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 78. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 79. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 80. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 81. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 82. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 84. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 85. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 86. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 87. Weak Mutation 158: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceVariable other -> this
   * Goal 88. Weak Mutation 159: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceComparisonOperator > -> -2
   * Goal 89. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 90. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 91. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setDataInicio("");
      viagem0.setSenha("k!0y<g$t+}");
      Viagem viagem1 = new Viagem();
      viagem1.setDataInicio("");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 14
  /*
   * 79 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setResponsavel(Lmodels/Usuario;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - false
   * Goal 19. Branch models.Viagem.setResponsavel(Lmodels/Usuario;)V: root-Branch in context: models.Viagem:setResponsavel(Lmodels/Usuario;)V
   * Goal 20. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 38. models.Viagem.<init>()V: Line 70
   * Goal 39. models.Viagem.<init>()V: Line 71
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 254
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 255
   * Goal 58. models.Viagem.setResponsavel(Lmodels/Usuario;)V: Line 156
   * Goal 59. models.Viagem.setResponsavel(Lmodels/Usuario;)V: Line 157
   * Goal 60. [METHOD] models.Viagem.<init>()V
   * Goal 61. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 62. [METHOD] models.Viagem.setResponsavel(Lmodels/Usuario;)V
   * Goal 63. [METHODNOEX] models.Viagem.<init>()V
   * Goal 64. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 65. [METHODNOEX] models.Viagem.setResponsavel(Lmodels/Usuario;)V
   * Goal 66. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 67. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 68. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 70. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 71. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 73. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 74. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 75. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 76. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 77. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 79. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      Usuario usuario0 = new Usuario();
      viagem1.setResponsavel(usuario0);
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 15
  /*
   * 85 covered goals:
   * Goal 1. models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - true
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I167 Branch 30 IFGT L250 - true
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true
   * Goal 19. models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false
   * Goal 20. models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - true
   * Goal 21. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 22. Branch models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setLocal(Ljava/lang/String;)V
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I167 Branch 30 IFGT L250 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 38. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 39. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 40. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 41. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:True
   * Goal 42. models.Viagem.<init>()V: Line 70
   * Goal 43. models.Viagem.<init>()V: Line 71
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 58. models.Viagem.equals(Ljava/lang/Object;)Z: Line 250
   * Goal 59. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 60. models.Viagem.equals(Ljava/lang/Object;)Z: Line 254
   * Goal 61. models.Viagem.equals(Ljava/lang/Object;)Z: Line 260
   * Goal 62. models.Viagem.equals(Ljava/lang/Object;)Z: Line 261
   * Goal 63. models.Viagem.equals(Ljava/lang/Object;)Z: Line 267
   * Goal 64. models.Viagem.setLocal(Ljava/lang/String;)V: Line 116
   * Goal 65. models.Viagem.setLocal(Ljava/lang/String;)V: Line 117
   * Goal 66. [METHOD] models.Viagem.<init>()V
   * Goal 67. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 68. [METHOD] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 69. [METHODNOEX] models.Viagem.<init>()V
   * Goal 70. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 71. [METHODNOEX] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 72. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 73. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 74. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 75. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 76. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 79. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 80. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 82. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 83. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 84. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 85. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      viagem0.setLocal("kE!0y<g$t+}");
      assertFalse(viagem0.equals((Object)viagem1));
      
      viagem1.setLocal("kE!0y<g$t+}");
      boolean boolean0 = viagem0.equals(viagem1);
      assertTrue(viagem0.equals((Object)viagem1));
      assertTrue(boolean0);
  }

  //Test case number: 16
  /*
   * 73 covered goals:
   * Goal 1. models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - false
   * Goal 17. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 18. Branch models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setLocal(Ljava/lang/String;)V
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 34. models.Viagem.<init>()V: Line 70
   * Goal 35. models.Viagem.<init>()V: Line 71
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 248
   * Goal 52. models.Viagem.setLocal(Ljava/lang/String;)V: Line 116
   * Goal 53. models.Viagem.setLocal(Ljava/lang/String;)V: Line 117
   * Goal 54. [METHOD] models.Viagem.<init>()V
   * Goal 55. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 56. [METHOD] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 57. [METHODNOEX] models.Viagem.<init>()V
   * Goal 58. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 59. [METHODNOEX] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 60. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 61. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 62. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 64. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 67. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 68. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 69. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 70. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 71. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 73. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem1.setLocal("kE!0y<g$t+}");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 17
  /*
   * 73 covered goals:
   * Goal 1. models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - true
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I167 Branch 30 IFGT L250 - false
   * Goal 17. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 18. Branch models.Viagem.setLocal(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setLocal(Ljava/lang/String;)V
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I167 Branch 30 IFGT L250 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 34. models.Viagem.<init>()V: Line 70
   * Goal 35. models.Viagem.<init>()V: Line 71
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 250
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 251
   * Goal 52. models.Viagem.setLocal(Ljava/lang/String;)V: Line 116
   * Goal 53. models.Viagem.setLocal(Ljava/lang/String;)V: Line 117
   * Goal 54. [METHOD] models.Viagem.<init>()V
   * Goal 55. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 56. [METHOD] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 57. [METHODNOEX] models.Viagem.<init>()V
   * Goal 58. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 59. [METHODNOEX] models.Viagem.setLocal(Ljava/lang/String;)V
   * Goal 60. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 61. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 62. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 63. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 64. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 67. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 68. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 69. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 70. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 71. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 73. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem0.setLocal("kE!0y<g$t+}");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 18
  /*
   * 85 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - true
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I141 Branch 27 IFNE L243 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true
   * Goal 19. models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false
   * Goal 20. models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - true
   * Goal 21. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 22. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I141 Branch 27 IFNE L243 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 38. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I181 Branch 32 IFNULL L254 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 39. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I202 Branch 34 IFNONNULL L260 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 40. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I207 Branch 35 IFNULL L261 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 41. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:True
   * Goal 42. models.Viagem.<init>()V: Line 70
   * Goal 43. models.Viagem.<init>()V: Line 71
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 243
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 58. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 59. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 60. models.Viagem.equals(Ljava/lang/Object;)Z: Line 254
   * Goal 61. models.Viagem.equals(Ljava/lang/Object;)Z: Line 260
   * Goal 62. models.Viagem.equals(Ljava/lang/Object;)Z: Line 261
   * Goal 63. models.Viagem.equals(Ljava/lang/Object;)Z: Line 267
   * Goal 64. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 65. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 66. [METHOD] models.Viagem.<init>()V
   * Goal 67. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 68. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 69. [METHODNOEX] models.Viagem.<init>()V
   * Goal 70. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 71. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 72. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 73. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 74. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 75. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 76. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 79. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 80. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 82. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 83. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 84. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 85. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      InscricaoAberta inscricaoAberta0 = new InscricaoAberta();
      Viagem viagem1 = new Viagem();
      viagem1.setInscricaoStrategy(inscricaoAberta0);
      assertFalse(viagem1.equals((Object)viagem0));
      
      viagem0.setInscricaoStrategy(inscricaoAberta0);
      boolean boolean0 = viagem1.equals(viagem0);
      assertTrue(viagem1.equals((Object)viagem0));
      assertTrue(boolean0);
  }

  //Test case number: 19
  /*
   * 67 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - false
   * Goal 15. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 16. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 30. models.Viagem.<init>()V: Line 70
   * Goal 31. models.Viagem.<init>()V: Line 71
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 34. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 35. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 241
   * Goal 46. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 47. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 48. [METHOD] models.Viagem.<init>()V
   * Goal 49. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 50. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 51. [METHODNOEX] models.Viagem.<init>()V
   * Goal 52. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 53. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 54. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 56. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 57. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 58. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 61. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 62. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 63. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 64. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 65. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 67. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      InscricaoAberta inscricaoAberta0 = new InscricaoAberta();
      viagem1.setInscricaoStrategy(inscricaoAberta0);
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 20
  /*
   * 67 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - true
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I141 Branch 27 IFNE L243 - false
   * Goal 15. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 16. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I141 Branch 27 IFNE L243 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 30. models.Viagem.<init>()V: Line 70
   * Goal 31. models.Viagem.<init>()V: Line 71
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 34. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 35. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 243
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 244
   * Goal 46. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 47. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 48. [METHOD] models.Viagem.<init>()V
   * Goal 49. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 50. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 51. [METHODNOEX] models.Viagem.<init>()V
   * Goal 52. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 53. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 54. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 55. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 56. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 57. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 58. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 61. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 62. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 63. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 64. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 65. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 67. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      InscricaoAberta inscricaoAberta0 = new InscricaoAberta();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem1.setInscricaoStrategy(inscricaoAberta0);
      boolean boolean0 = viagem1.equals(viagem0);
      assertFalse(boolean0);
  }

  //Test case number: 21
  /*
   * 62 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDescricao(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - false
   * Goal 13. Branch models.Viagem.setDescricao(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDescricao(Ljava/lang/String;)V
   * Goal 14. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 15. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 26. models.Viagem.<init>()V: Line 70
   * Goal 27. models.Viagem.<init>()V: Line 71
   * Goal 28. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 29. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 30. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 31. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 34. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 35. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 234
   * Goal 40. models.Viagem.setDescricao(Ljava/lang/String;)V: Line 140
   * Goal 41. models.Viagem.setDescricao(Ljava/lang/String;)V: Line 141
   * Goal 42. [METHOD] models.Viagem.<init>()V
   * Goal 43. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 44. [METHOD] models.Viagem.setDescricao(Ljava/lang/String;)V
   * Goal 45. [METHODNOEX] models.Viagem.<init>()V
   * Goal 46. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 47. [METHODNOEX] models.Viagem.setDescricao(Ljava/lang/String;)V
   * Goal 48. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 52. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 55. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 56. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 57. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 58. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 59. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 61. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   * Goal 62. Weak Mutation 166: models.Viagem.equals(Ljava/lang/Object;)Z:234 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem1.setDescricao("*0 6Kp-o;\"Co<=|cs");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 22
  /*
   * 61 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDescricao(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - true
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I115 Branch 24 IFGT L236 - false
   * Goal 13. Branch models.Viagem.setDescricao(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDescricao(Ljava/lang/String;)V
   * Goal 14. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 15. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I115 Branch 24 IFGT L236 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 26. models.Viagem.<init>()V: Line 70
   * Goal 27. models.Viagem.<init>()V: Line 71
   * Goal 28. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 29. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 30. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 31. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 34. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 35. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 36. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 37. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 38. models.Viagem.equals(Ljava/lang/Object;)Z: Line 236
   * Goal 39. models.Viagem.equals(Ljava/lang/Object;)Z: Line 237
   * Goal 40. models.Viagem.setDescricao(Ljava/lang/String;)V: Line 140
   * Goal 41. models.Viagem.setDescricao(Ljava/lang/String;)V: Line 141
   * Goal 42. [METHOD] models.Viagem.<init>()V
   * Goal 43. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 44. [METHOD] models.Viagem.setDescricao(Ljava/lang/String;)V
   * Goal 45. [METHODNOEX] models.Viagem.<init>()V
   * Goal 46. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 47. [METHODNOEX] models.Viagem.setDescricao(Ljava/lang/String;)V
   * Goal 48. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 49. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 50. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 51. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 52. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 55. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 56. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 57. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 58. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 59. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 167: models.Viagem.equals(Ljava/lang/Object;)Z:236 - ReplaceVariable other -> this
   * Goal 61. Weak Mutation 169: models.Viagem.equals(Ljava/lang/Object;)Z:236 - ReplaceComparisonOperator > -> !=
   */

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setDescricao("R");
      Viagem viagem1 = new Viagem();
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 23
  /*
   * 53 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - false
   * Goal 11. Branch models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDataInicio(Ljava/lang/String;)V
   * Goal 12. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 13. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 22. models.Viagem.<init>()V: Line 70
   * Goal 23. models.Viagem.<init>()V: Line 71
   * Goal 24. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 25. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 26. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 27. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 28. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 29. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 30. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 31. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 227
   * Goal 34. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 124
   * Goal 35. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 125
   * Goal 36. [METHOD] models.Viagem.<init>()V
   * Goal 37. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 38. [METHOD] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 39. [METHODNOEX] models.Viagem.<init>()V
   * Goal 40. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 41. [METHODNOEX] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 42. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 44. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 46. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 48. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 49. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 50. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 51. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 52. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 53. Weak Mutation 157: models.Viagem.equals(Ljava/lang/Object;)Z:227 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem1.setDataInicio("");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 24
  /*
   * 53 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - false
   * Goal 11. Branch models.Viagem.setDataInicio(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDataInicio(Ljava/lang/String;)V
   * Goal 12. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 13. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 17. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 18. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 19. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 20. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I89 Branch 21 IFGT L229 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 21. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 22. models.Viagem.<init>()V: Line 70
   * Goal 23. models.Viagem.<init>()V: Line 71
   * Goal 24. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 25. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 26. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 27. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 28. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 29. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 30. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 31. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 32. models.Viagem.equals(Ljava/lang/Object;)Z: Line 229
   * Goal 33. models.Viagem.equals(Ljava/lang/Object;)Z: Line 230
   * Goal 34. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 124
   * Goal 35. models.Viagem.setDataInicio(Ljava/lang/String;)V: Line 125
   * Goal 36. [METHOD] models.Viagem.<init>()V
   * Goal 37. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 38. [METHOD] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 39. [METHODNOEX] models.Viagem.<init>()V
   * Goal 40. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 41. [METHODNOEX] models.Viagem.setDataInicio(Ljava/lang/String;)V
   * Goal 42. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 43. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 44. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 45. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 46. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 48. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 49. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 50. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 51. Weak Mutation 158: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceVariable other -> this
   * Goal 52. Weak Mutation 160: models.Viagem.equals(Ljava/lang/Object;)Z:229 - ReplaceComparisonOperator > -> !=
   * Goal 53. Weak Mutation 162: models.Viagem.equals(Ljava/lang/Object;)Z:230 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.setDataInicio("");
      Viagem viagem1 = new Viagem();
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 25
  /*
   * 44 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setDataFim(Ljava/lang/String;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - false
   * Goal 9. Branch models.Viagem.setDataFim(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setDataFim(Ljava/lang/String;)V
   * Goal 10. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 11. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 12. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 13. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 14. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 15. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 16. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 17. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 18. models.Viagem.<init>()V: Line 70
   * Goal 19. models.Viagem.<init>()V: Line 71
   * Goal 20. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 21. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 22. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 23. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 24. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 25. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 26. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 27. models.Viagem.equals(Ljava/lang/Object;)Z: Line 220
   * Goal 28. models.Viagem.setDataFim(Ljava/lang/String;)V: Line 132
   * Goal 29. models.Viagem.setDataFim(Ljava/lang/String;)V: Line 133
   * Goal 30. [METHOD] models.Viagem.<init>()V
   * Goal 31. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 32. [METHOD] models.Viagem.setDataFim(Ljava/lang/String;)V
   * Goal 33. [METHODNOEX] models.Viagem.<init>()V
   * Goal 34. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 35. [METHODNOEX] models.Viagem.setDataFim(Ljava/lang/String;)V
   * Goal 36. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 38. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 39. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 40. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 42. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 43. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 44. Weak Mutation 148: models.Viagem.equals(Ljava/lang/Object;)Z:220 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Viagem viagem1 = new Viagem();
      assertTrue(viagem1.equals((Object)viagem0));
      
      viagem1.setDataFim("7*gc'X JbDW]'uB9R");
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 26
  /*
   * 19 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - false
   * Goal 4. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 5. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 6. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 7. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 8. models.Viagem.<init>()V: Line 70
   * Goal 9. models.Viagem.<init>()V: Line 71
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: Line 209
   * Goal 13. [METHOD] models.Viagem.<init>()V
   * Goal 14. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 15. [METHODNOEX] models.Viagem.<init>()V
   * Goal 16. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 17. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 18. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 19. Weak Mutation 139: models.Viagem.equals(Ljava/lang/Object;)Z:209 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      boolean boolean0 = viagem0.equals((Object) null);
      assertFalse(boolean0);
  }

  //Test case number: 27
  /*
   * 15 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 5. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:True
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: Line 206
   * Goal 10. [METHOD] models.Viagem.<init>()V
   * Goal 11. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 12. [METHODNOEX] models.Viagem.<init>()V
   * Goal 13. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 14. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 137: models.Viagem.equals(Ljava/lang/Object;)Z:206 - ReplaceConstant - 1 -> 0
   */

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      boolean boolean0 = viagem0.equals(viagem0);
      assertTrue(boolean0);
  }

  //Test case number: 28
  /*
   * 23 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - false
   * Goal 5. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 6. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 7. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 8. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 9. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 10. models.Viagem.<init>()V: Line 70
   * Goal 11. models.Viagem.<init>()V: Line 71
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: Line 212
   * Goal 16. [METHOD] models.Viagem.<init>()V
   * Goal 17. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 18. [METHODNOEX] models.Viagem.<init>()V
   * Goal 19. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 20. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 21. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 22. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 23. Weak Mutation 141: models.Viagem.equals(Ljava/lang/Object;)Z:212 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      boolean boolean0 = viagem0.equals("kE!0y<g$t+}");
      assertFalse(boolean0);
  }

  //Test case number: 29
  /*
   * 170 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: root-Branch
   * Goal 3. models.Viagem.hashCode()I: I15 Branch 4 IFNONNULL L185 - true
   * Goal 4. models.Viagem.hashCode()I: I34 Branch 5 IFNONNULL L187 - true
   * Goal 5. models.Viagem.hashCode()I: I51 Branch 6 IFNONNULL L188 - true
   * Goal 6. models.Viagem.hashCode()I: I70 Branch 7 IFNONNULL L190 - true
   * Goal 7. models.Viagem.hashCode()I: I89 Branch 8 IFNONNULL L192 - true
   * Goal 8. models.Viagem.hashCode()I: I116 Branch 9 IFNONNULL L196 - true
   * Goal 9. models.Viagem.hashCode()I: I133 Branch 10 IFNONNULL L197 - true
   * Goal 10. models.Viagem.hashCode()I: I152 Branch 11 IFNONNULL L199 - false
   * Goal 11. Branch models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: root-Branch in context: models.Viagem:<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 12. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 13. Branch models.Viagem.hashCode()I: I15 Branch 4 IFNONNULL L185 - true in context: models.Viagem:hashCode()I
   * Goal 14. Branch models.Viagem.hashCode()I: I34 Branch 5 IFNONNULL L187 - true in context: models.Viagem:hashCode()I
   * Goal 15. Branch models.Viagem.hashCode()I: I51 Branch 6 IFNONNULL L188 - true in context: models.Viagem:hashCode()I
   * Goal 16. Branch models.Viagem.hashCode()I: I70 Branch 7 IFNONNULL L190 - true in context: models.Viagem:hashCode()I
   * Goal 17. Branch models.Viagem.hashCode()I: I89 Branch 8 IFNONNULL L192 - true in context: models.Viagem:hashCode()I
   * Goal 18. Branch models.Viagem.hashCode()I: I116 Branch 9 IFNONNULL L196 - true in context: models.Viagem:hashCode()I
   * Goal 19. Branch models.Viagem.hashCode()I: I133 Branch 10 IFNONNULL L197 - true in context: models.Viagem:hashCode()I
   * Goal 20. Branch models.Viagem.hashCode()I: I152 Branch 11 IFNONNULL L199 - false in context: models.Viagem:hashCode()I
   * Goal 21. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 98
   * Goal 22. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 99
   * Goal 23. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 100
   * Goal 24. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 101
   * Goal 25. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 102
   * Goal 26. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 103
   * Goal 27. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 104
   * Goal 28. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 105
   * Goal 29. models.Viagem.hashCode()I: Line 183
   * Goal 30. models.Viagem.hashCode()I: Line 184
   * Goal 31. models.Viagem.hashCode()I: Line 185
   * Goal 32. models.Viagem.hashCode()I: Line 186
   * Goal 33. models.Viagem.hashCode()I: Line 187
   * Goal 34. models.Viagem.hashCode()I: Line 188
   * Goal 35. models.Viagem.hashCode()I: Line 189
   * Goal 36. models.Viagem.hashCode()I: Line 190
   * Goal 37. models.Viagem.hashCode()I: Line 191
   * Goal 38. models.Viagem.hashCode()I: Line 192
   * Goal 39. models.Viagem.hashCode()I: Line 195
   * Goal 40. models.Viagem.hashCode()I: Line 196
   * Goal 41. models.Viagem.hashCode()I: Line 197
   * Goal 42. models.Viagem.hashCode()I: Line 198
   * Goal 43. models.Viagem.hashCode()I: Line 199
   * Goal 44. models.Viagem.hashCode()I: Line 200
   * Goal 45. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 46. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 47. [METHOD] models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 48. [METHOD] models.Viagem.hashCode()I
   * Goal 49. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 50. [METHODNOEX] models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 51. [METHODNOEX] models.Viagem.hashCode()I
   * Goal 52. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 53. Weak Mutation 3: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:99 - ReplaceVariable local -> dataFim
   * Goal 54. Weak Mutation 4: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:99 - ReplaceVariable local -> descricao
   * Goal 55. Weak Mutation 5: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:100 - ReplaceVariable dataInicio -> dataFim
   * Goal 56. Weak Mutation 7: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:100 - ReplaceVariable dataInicio -> descricao
   * Goal 57. Weak Mutation 8: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> dataInicio
   * Goal 58. Weak Mutation 9: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> local
   * Goal 59. Weak Mutation 10: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> descricao
   * Goal 60. Weak Mutation 11: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> dataInicio
   * Goal 61. Weak Mutation 12: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> dataFim
   * Goal 62. Weak Mutation 13: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> local
   * Goal 63. Weak Mutation 20: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 0
   * Goal 64. Weak Mutation 21: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 1
   * Goal 65. Weak Mutation 22: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> -1
   * Goal 66. Weak Mutation 23: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 30
   * Goal 67. Weak Mutation 24: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 32
   * Goal 68. Weak Mutation 25: models.Viagem.hashCode()I:184 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 26: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 0
   * Goal 70. Weak Mutation 27: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 1
   * Goal 71. Weak Mutation 28: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> -1
   * Goal 72. Weak Mutation 29: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 30
   * Goal 73. Weak Mutation 30: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 32
   * Goal 74. Weak Mutation 31: models.Viagem.hashCode()I:185 - ReplaceVariable result -> prime
   * Goal 75. Weak Mutation 32: models.Viagem.hashCode()I:185 - InsertUnaryOp Negation of result
   * Goal 76. Weak Mutation 33: models.Viagem.hashCode()I:185 - InsertUnaryOp IINC 1 result
   * Goal 77. Weak Mutation 34: models.Viagem.hashCode()I:185 - InsertUnaryOp IINC -1 result
   * Goal 78. Weak Mutation 35: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 36: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 37: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 39: models.Viagem.hashCode()I:185 - ReplaceComparisonOperator != null -> = null
   * Goal 82. Weak Mutation 41: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> %
   * Goal 83. Weak Mutation 42: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> -
   * Goal 84. Weak Mutation 43: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> *
   * Goal 85. Weak Mutation 44: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> /
   * Goal 86. Weak Mutation 45: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 0
   * Goal 87. Weak Mutation 46: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 1
   * Goal 88. Weak Mutation 47: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> -1
   * Goal 89. Weak Mutation 48: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 30
   * Goal 90. Weak Mutation 49: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 32
   * Goal 91. Weak Mutation 50: models.Viagem.hashCode()I:187 - ReplaceVariable result -> prime
   * Goal 92. Weak Mutation 51: models.Viagem.hashCode()I:187 - InsertUnaryOp Negation of result
   * Goal 93. Weak Mutation 52: models.Viagem.hashCode()I:187 - InsertUnaryOp IINC 1 result
   * Goal 94. Weak Mutation 53: models.Viagem.hashCode()I:187 - InsertUnaryOp IINC -1 result
   * Goal 95. Weak Mutation 54: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> +
   * Goal 96. Weak Mutation 55: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> %
   * Goal 97. Weak Mutation 56: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> -
   * Goal 98. Weak Mutation 57: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> /
   * Goal 99. Weak Mutation 58: models.Viagem.hashCode()I:187 - ReplaceComparisonOperator != null -> = null
   * Goal 100. Weak Mutation 60: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator + -> %
   * Goal 101. Weak Mutation 63: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator + -> /
   * Goal 102. Weak Mutation 64: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 0
   * Goal 103. Weak Mutation 65: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 1
   * Goal 104. Weak Mutation 66: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> -1
   * Goal 105. Weak Mutation 67: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 30
   * Goal 106. Weak Mutation 68: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 32
   * Goal 107. Weak Mutation 69: models.Viagem.hashCode()I:188 - ReplaceVariable result -> prime
   * Goal 108. Weak Mutation 70: models.Viagem.hashCode()I:188 - InsertUnaryOp Negation of result
   * Goal 109. Weak Mutation 71: models.Viagem.hashCode()I:188 - InsertUnaryOp IINC 1 result
   * Goal 110. Weak Mutation 72: models.Viagem.hashCode()I:188 - InsertUnaryOp IINC -1 result
   * Goal 111. Weak Mutation 73: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> +
   * Goal 112. Weak Mutation 74: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> %
   * Goal 113. Weak Mutation 75: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> -
   * Goal 114. Weak Mutation 76: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> /
   * Goal 115. Weak Mutation 77: models.Viagem.hashCode()I:188 - ReplaceComparisonOperator != null -> = null
   * Goal 116. Weak Mutation 79: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> %
   * Goal 117. Weak Mutation 80: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> -
   * Goal 118. Weak Mutation 81: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> *
   * Goal 119. Weak Mutation 82: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> /
   * Goal 120. Weak Mutation 83: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 0
   * Goal 121. Weak Mutation 84: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 1
   * Goal 122. Weak Mutation 85: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> -1
   * Goal 123. Weak Mutation 86: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 30
   * Goal 124. Weak Mutation 87: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 32
   * Goal 125. Weak Mutation 88: models.Viagem.hashCode()I:190 - ReplaceVariable result -> prime
   * Goal 126. Weak Mutation 89: models.Viagem.hashCode()I:190 - InsertUnaryOp Negation of result
   * Goal 127. Weak Mutation 90: models.Viagem.hashCode()I:190 - InsertUnaryOp IINC 1 result
   * Goal 128. Weak Mutation 91: models.Viagem.hashCode()I:190 - InsertUnaryOp IINC -1 result
   * Goal 129. Weak Mutation 92: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> +
   * Goal 130. Weak Mutation 93: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> %
   * Goal 131. Weak Mutation 94: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> -
   * Goal 132. Weak Mutation 95: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> /
   * Goal 133. Weak Mutation 96: models.Viagem.hashCode()I:190 - ReplaceComparisonOperator != null -> = null
   * Goal 134. Weak Mutation 98: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> %
   * Goal 135. Weak Mutation 99: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> -
   * Goal 136. Weak Mutation 100: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> *
   * Goal 137. Weak Mutation 101: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> /
   * Goal 138. Weak Mutation 102: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 0
   * Goal 139. Weak Mutation 103: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 1
   * Goal 140. Weak Mutation 104: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> -1
   * Goal 141. Weak Mutation 105: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 30
   * Goal 142. Weak Mutation 106: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 32
   * Goal 143. Weak Mutation 107: models.Viagem.hashCode()I:192 - ReplaceVariable result -> prime
   * Goal 144. Weak Mutation 108: models.Viagem.hashCode()I:192 - InsertUnaryOp Negation of result
   * Goal 145. Weak Mutation 109: models.Viagem.hashCode()I:192 - InsertUnaryOp IINC 1 result
   * Goal 146. Weak Mutation 110: models.Viagem.hashCode()I:192 - InsertUnaryOp IINC -1 result
   * Goal 147. Weak Mutation 111: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> +
   * Goal 148. Weak Mutation 112: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> %
   * Goal 149. Weak Mutation 113: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> -
   * Goal 150. Weak Mutation 114: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> /
   * Goal 151. Weak Mutation 115: models.Viagem.hashCode()I:192 - ReplaceComparisonOperator != null -> = null
   * Goal 152. Weak Mutation 117: models.Viagem.hashCode()I:195 - ReplaceComparisonOperator == -> !=
   * Goal 153. Weak Mutation 118: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> %
   * Goal 154. Weak Mutation 119: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> -
   * Goal 155. Weak Mutation 120: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> *
   * Goal 156. Weak Mutation 121: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> /
   * Goal 157. Weak Mutation 122: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 0
   * Goal 158. Weak Mutation 123: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 1
   * Goal 159. Weak Mutation 124: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> -1
   * Goal 160. Weak Mutation 125: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 30
   * Goal 161. Weak Mutation 126: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 32
   * Goal 162. Weak Mutation 127: models.Viagem.hashCode()I:196 - ReplaceVariable result -> prime
   * Goal 163. Weak Mutation 128: models.Viagem.hashCode()I:196 - InsertUnaryOp Negation of result
   * Goal 164. Weak Mutation 129: models.Viagem.hashCode()I:196 - InsertUnaryOp IINC 1 result
   * Goal 165. Weak Mutation 130: models.Viagem.hashCode()I:196 - InsertUnaryOp IINC -1 result
   * Goal 166. Weak Mutation 131: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> +
   * Goal 167. Weak Mutation 132: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> %
   * Goal 168. Weak Mutation 133: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> -
   * Goal 169. Weak Mutation 134: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> /
   * Goal 170. Weak Mutation 135: models.Viagem.hashCode()I:196 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EContinente eContinente0 = EContinente.AFRICA;
      LinkedList<Usuario> linkedList0 = new LinkedList<Usuario>();
      Usuario usuario0 = new Usuario();
      Viagem viagem0 = new Viagem(eContinente0, "df2YUWOBb@[D{#;", "df2YUWOBb@[D{#;", "", "AMERICA_LATINA", (List<Usuario>) linkedList0, usuario0);
      InscricaoAberta inscricaoAberta0 = new InscricaoAberta();
      viagem0.setInscricaoStrategy(inscricaoAberta0);
      viagem0.hashCode();
      assertEquals("", viagem0.getDataFim());
      assertEquals("df2YUWOBb@[D{#;", viagem0.getLocal());
      assertEquals("AMERICA_LATINA", viagem0.getDescricao());
      assertEquals("df2YUWOBb@[D{#;", viagem0.getDataInicio());
  }

  //Test case number: 30
  /*
   * 138 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.hashCode()I: I15 Branch 4 IFNONNULL L185 - false
   * Goal 3. models.Viagem.hashCode()I: I34 Branch 5 IFNONNULL L187 - false
   * Goal 4. models.Viagem.hashCode()I: I51 Branch 6 IFNONNULL L188 - false
   * Goal 5. models.Viagem.hashCode()I: I70 Branch 7 IFNONNULL L190 - false
   * Goal 6. models.Viagem.hashCode()I: I89 Branch 8 IFNONNULL L192 - false
   * Goal 7. models.Viagem.hashCode()I: I116 Branch 9 IFNONNULL L196 - false
   * Goal 8. models.Viagem.hashCode()I: I133 Branch 10 IFNONNULL L197 - false
   * Goal 9. models.Viagem.hashCode()I: I152 Branch 11 IFNONNULL L199 - false
   * Goal 10. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 11. Branch models.Viagem.hashCode()I: I15 Branch 4 IFNONNULL L185 - false in context: models.Viagem:hashCode()I
   * Goal 12. Branch models.Viagem.hashCode()I: I34 Branch 5 IFNONNULL L187 - false in context: models.Viagem:hashCode()I
   * Goal 13. Branch models.Viagem.hashCode()I: I51 Branch 6 IFNONNULL L188 - false in context: models.Viagem:hashCode()I
   * Goal 14. Branch models.Viagem.hashCode()I: I70 Branch 7 IFNONNULL L190 - false in context: models.Viagem:hashCode()I
   * Goal 15. Branch models.Viagem.hashCode()I: I89 Branch 8 IFNONNULL L192 - false in context: models.Viagem:hashCode()I
   * Goal 16. Branch models.Viagem.hashCode()I: I116 Branch 9 IFNONNULL L196 - false in context: models.Viagem:hashCode()I
   * Goal 17. Branch models.Viagem.hashCode()I: I133 Branch 10 IFNONNULL L197 - false in context: models.Viagem:hashCode()I
   * Goal 18. Branch models.Viagem.hashCode()I: I152 Branch 11 IFNONNULL L199 - false in context: models.Viagem:hashCode()I
   * Goal 19. models.Viagem.<init>()V: Line 70
   * Goal 20. models.Viagem.<init>()V: Line 71
   * Goal 21. models.Viagem.hashCode()I: Line 183
   * Goal 22. models.Viagem.hashCode()I: Line 184
   * Goal 23. models.Viagem.hashCode()I: Line 185
   * Goal 24. models.Viagem.hashCode()I: Line 187
   * Goal 25. models.Viagem.hashCode()I: Line 188
   * Goal 26. models.Viagem.hashCode()I: Line 190
   * Goal 27. models.Viagem.hashCode()I: Line 192
   * Goal 28. models.Viagem.hashCode()I: Line 196
   * Goal 29. models.Viagem.hashCode()I: Line 197
   * Goal 30. models.Viagem.hashCode()I: Line 199
   * Goal 31. models.Viagem.hashCode()I: Line 200
   * Goal 32. [METHOD] models.Viagem.<init>()V
   * Goal 33. [METHOD] models.Viagem.hashCode()I
   * Goal 34. [METHODNOEX] models.Viagem.<init>()V
   * Goal 35. [METHODNOEX] models.Viagem.hashCode()I
   * Goal 36. Weak Mutation 20: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 0
   * Goal 37. Weak Mutation 21: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 1
   * Goal 38. Weak Mutation 22: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> -1
   * Goal 39. Weak Mutation 23: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 30
   * Goal 40. Weak Mutation 24: models.Viagem.hashCode()I:183 - ReplaceConstant - 31 -> 32
   * Goal 41. Weak Mutation 25: models.Viagem.hashCode()I:184 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 26: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 0
   * Goal 43. Weak Mutation 27: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 1
   * Goal 44. Weak Mutation 28: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> -1
   * Goal 45. Weak Mutation 29: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 30
   * Goal 46. Weak Mutation 30: models.Viagem.hashCode()I:185 - ReplaceConstant - 31 -> 32
   * Goal 47. Weak Mutation 31: models.Viagem.hashCode()I:185 - ReplaceVariable result -> prime
   * Goal 48. Weak Mutation 32: models.Viagem.hashCode()I:185 - InsertUnaryOp Negation of result
   * Goal 49. Weak Mutation 33: models.Viagem.hashCode()I:185 - InsertUnaryOp IINC 1 result
   * Goal 50. Weak Mutation 34: models.Viagem.hashCode()I:185 - InsertUnaryOp IINC -1 result
   * Goal 51. Weak Mutation 35: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> +
   * Goal 52. Weak Mutation 36: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> %
   * Goal 53. Weak Mutation 37: models.Viagem.hashCode()I:185 - ReplaceArithmeticOperator * -> -
   * Goal 54. Weak Mutation 39: models.Viagem.hashCode()I:185 - ReplaceComparisonOperator != null -> = null
   * Goal 55. Weak Mutation 40: models.Viagem.hashCode()I:185 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 41: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 44: models.Viagem.hashCode()I:186 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 45: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 0
   * Goal 59. Weak Mutation 46: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 1
   * Goal 60. Weak Mutation 47: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> -1
   * Goal 61. Weak Mutation 48: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 30
   * Goal 62. Weak Mutation 49: models.Viagem.hashCode()I:187 - ReplaceConstant - 31 -> 32
   * Goal 63. Weak Mutation 51: models.Viagem.hashCode()I:187 - InsertUnaryOp Negation of result
   * Goal 64. Weak Mutation 52: models.Viagem.hashCode()I:187 - InsertUnaryOp IINC 1 result
   * Goal 65. Weak Mutation 53: models.Viagem.hashCode()I:187 - InsertUnaryOp IINC -1 result
   * Goal 66. Weak Mutation 54: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> +
   * Goal 67. Weak Mutation 55: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> %
   * Goal 68. Weak Mutation 56: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> -
   * Goal 69. Weak Mutation 57: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator * -> /
   * Goal 70. Weak Mutation 58: models.Viagem.hashCode()I:187 - ReplaceComparisonOperator != null -> = null
   * Goal 71. Weak Mutation 59: models.Viagem.hashCode()I:187 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 60: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator + -> %
   * Goal 73. Weak Mutation 63: models.Viagem.hashCode()I:187 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 64: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 0
   * Goal 75. Weak Mutation 65: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 1
   * Goal 76. Weak Mutation 66: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> -1
   * Goal 77. Weak Mutation 67: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 30
   * Goal 78. Weak Mutation 68: models.Viagem.hashCode()I:188 - ReplaceConstant - 31 -> 32
   * Goal 79. Weak Mutation 69: models.Viagem.hashCode()I:188 - ReplaceVariable result -> prime
   * Goal 80. Weak Mutation 70: models.Viagem.hashCode()I:188 - InsertUnaryOp Negation of result
   * Goal 81. Weak Mutation 71: models.Viagem.hashCode()I:188 - InsertUnaryOp IINC 1 result
   * Goal 82. Weak Mutation 72: models.Viagem.hashCode()I:188 - InsertUnaryOp IINC -1 result
   * Goal 83. Weak Mutation 73: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> +
   * Goal 84. Weak Mutation 74: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> %
   * Goal 85. Weak Mutation 75: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> -
   * Goal 86. Weak Mutation 76: models.Viagem.hashCode()I:188 - ReplaceArithmeticOperator * -> /
   * Goal 87. Weak Mutation 77: models.Viagem.hashCode()I:188 - ReplaceComparisonOperator != null -> = null
   * Goal 88. Weak Mutation 78: models.Viagem.hashCode()I:188 - ReplaceConstant - 0 -> 1
   * Goal 89. Weak Mutation 79: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> %
   * Goal 90. Weak Mutation 82: models.Viagem.hashCode()I:189 - ReplaceArithmeticOperator + -> /
   * Goal 91. Weak Mutation 83: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 0
   * Goal 92. Weak Mutation 84: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 1
   * Goal 93. Weak Mutation 85: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> -1
   * Goal 94. Weak Mutation 86: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 30
   * Goal 95. Weak Mutation 87: models.Viagem.hashCode()I:190 - ReplaceConstant - 31 -> 32
   * Goal 96. Weak Mutation 88: models.Viagem.hashCode()I:190 - ReplaceVariable result -> prime
   * Goal 97. Weak Mutation 89: models.Viagem.hashCode()I:190 - InsertUnaryOp Negation of result
   * Goal 98. Weak Mutation 90: models.Viagem.hashCode()I:190 - InsertUnaryOp IINC 1 result
   * Goal 99. Weak Mutation 91: models.Viagem.hashCode()I:190 - InsertUnaryOp IINC -1 result
   * Goal 100. Weak Mutation 92: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> +
   * Goal 101. Weak Mutation 93: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> %
   * Goal 102. Weak Mutation 94: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> -
   * Goal 103. Weak Mutation 95: models.Viagem.hashCode()I:190 - ReplaceArithmeticOperator * -> /
   * Goal 104. Weak Mutation 96: models.Viagem.hashCode()I:190 - ReplaceComparisonOperator != null -> = null
   * Goal 105. Weak Mutation 97: models.Viagem.hashCode()I:190 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 98: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 101: models.Viagem.hashCode()I:191 - ReplaceArithmeticOperator + -> /
   * Goal 108. Weak Mutation 102: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 0
   * Goal 109. Weak Mutation 103: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 1
   * Goal 110. Weak Mutation 104: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> -1
   * Goal 111. Weak Mutation 105: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 30
   * Goal 112. Weak Mutation 106: models.Viagem.hashCode()I:192 - ReplaceConstant - 31 -> 32
   * Goal 113. Weak Mutation 107: models.Viagem.hashCode()I:192 - ReplaceVariable result -> prime
   * Goal 114. Weak Mutation 108: models.Viagem.hashCode()I:192 - InsertUnaryOp Negation of result
   * Goal 115. Weak Mutation 109: models.Viagem.hashCode()I:192 - InsertUnaryOp IINC 1 result
   * Goal 116. Weak Mutation 110: models.Viagem.hashCode()I:192 - InsertUnaryOp IINC -1 result
   * Goal 117. Weak Mutation 111: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> +
   * Goal 118. Weak Mutation 112: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> %
   * Goal 119. Weak Mutation 113: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> -
   * Goal 120. Weak Mutation 114: models.Viagem.hashCode()I:192 - ReplaceArithmeticOperator * -> /
   * Goal 121. Weak Mutation 115: models.Viagem.hashCode()I:192 - ReplaceComparisonOperator != null -> = null
   * Goal 122. Weak Mutation 116: models.Viagem.hashCode()I:192 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 118: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> %
   * Goal 124. Weak Mutation 121: models.Viagem.hashCode()I:195 - ReplaceArithmeticOperator + -> /
   * Goal 125. Weak Mutation 122: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 0
   * Goal 126. Weak Mutation 123: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 1
   * Goal 127. Weak Mutation 124: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> -1
   * Goal 128. Weak Mutation 125: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 30
   * Goal 129. Weak Mutation 126: models.Viagem.hashCode()I:196 - ReplaceConstant - 31 -> 32
   * Goal 130. Weak Mutation 127: models.Viagem.hashCode()I:196 - ReplaceVariable result -> prime
   * Goal 131. Weak Mutation 128: models.Viagem.hashCode()I:196 - InsertUnaryOp Negation of result
   * Goal 132. Weak Mutation 129: models.Viagem.hashCode()I:196 - InsertUnaryOp IINC 1 result
   * Goal 133. Weak Mutation 130: models.Viagem.hashCode()I:196 - InsertUnaryOp IINC -1 result
   * Goal 134. Weak Mutation 131: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> +
   * Goal 135. Weak Mutation 132: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> %
   * Goal 136. Weak Mutation 133: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> -
   * Goal 137. Weak Mutation 134: models.Viagem.hashCode()I:196 - ReplaceArithmeticOperator * -> /
   * Goal 138. Weak Mutation 135: models.Viagem.hashCode()I:196 - ReplaceComparisonOperator != null -> = null
   */

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      viagem0.hashCode();
  }

  //Test case number: 31
  /*
   * 28 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch
   * Goal 4. models.Viagem.getSenha()Ljava/lang/String;: root-Branch
   * Goal 5. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: I7 Branch 1 IFEQ L74 - true
   * Goal 6. Branch models.Viagem.setSenha(Ljava/lang/String;)V: root-Branch in context: models.Viagem:setSenha(Ljava/lang/String;)V
   * Goal 7. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 8. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 9. Branch models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: I7 Branch 1 IFEQ L74 - true in context: models.Viagem:inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 10. inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V_org.evosuite.runtime.mock.java.lang.MockRuntimeException_EXPLICIT
   * Goal 11. models.Viagem.<init>()V: Line 70
   * Goal 12. models.Viagem.<init>()V: Line 71
   * Goal 13. models.Viagem.getSenha()Ljava/lang/String;: Line 160
   * Goal 14. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 74
   * Goal 15. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 78
   * Goal 16. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 17. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 18. models.Viagem.setSenha(Ljava/lang/String;)V: Line 164
   * Goal 19. models.Viagem.setSenha(Ljava/lang/String;)V: Line 165
   * Goal 20. [METHOD] models.Viagem.<init>()V
   * Goal 21. [METHOD] models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 22. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 23. [METHOD] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 24. [METHODNOEX] models.Viagem.<init>()V
   * Goal 25. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 26. [METHODNOEX] models.Viagem.setSenha(Ljava/lang/String;)V
   * Goal 27. Weak Mutation 0: models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V:74 - ReplaceComparisonOperator == -> !=
   * Goal 28. Weak Mutation 1: models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V:78 - ReplaceConstant - Senha inválida. Tente novamente. -> 
   */

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      InscricaoLimitada inscricaoLimitada0 = new InscricaoLimitada();
      viagem0.setInscricaoStrategy(inscricaoLimitada0);
      viagem0.setSenha(")dI9E,/*z t");
      Usuario usuario0 = new Usuario();
      // Undeclared exception!
      try { 
        viagem0.inscreverParticipante(usuario0, "(TY8BW%D5r");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Senha inv\u00E1lida. Tente novamente.
         //
         assertThrownBy("models.Viagem", e);
      }
  }

  //Test case number: 32
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.getSenha()Ljava/lang/String;: root-Branch
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.getSenha()Ljava/lang/String;: root-Branch in context: models.Viagem:getSenha()Ljava/lang/String;
   * Goal 5. [Output]: models.Viagem.getSenha()Ljava/lang/String;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getSenha()Ljava/lang/String;: Line 160
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getSenha()Ljava/lang/String;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getSenha()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      String string0 = viagem0.getSenha();
      assertNull(string0);
  }

  //Test case number: 33
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.getResponsavel()Lmodels/Usuario;: root-Branch
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.getResponsavel()Lmodels/Usuario;: root-Branch in context: models.Viagem:getResponsavel()Lmodels/Usuario;
   * Goal 5. [Output]: models.Viagem.getResponsavel()Lmodels/Usuario;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getResponsavel()Lmodels/Usuario;: Line 152
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getResponsavel()Lmodels/Usuario;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getResponsavel()Lmodels/Usuario;
   */

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Usuario usuario0 = viagem0.getResponsavel();
      assertNull(usuario0);
  }

  //Test case number: 34
  /*
   * 79 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.setResponsavel(Lmodels/Usuario;)V: root-Branch
   * Goal 3. models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true
   * Goal 4. models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true
   * Goal 5. models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true
   * Goal 6. models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true
   * Goal 7. models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false
   * Goal 8. models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true
   * Goal 9. models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false
   * Goal 10. models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true
   * Goal 11. models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false
   * Goal 12. models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true
   * Goal 13. models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false
   * Goal 14. models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true
   * Goal 15. models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false
   * Goal 16. models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true
   * Goal 17. models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - true
   * Goal 18. models.Viagem.equals(Ljava/lang/Object;)Z: I193 Branch 33 IFNE L257 - false
   * Goal 19. Branch models.Viagem.setResponsavel(Lmodels/Usuario;)V: root-Branch in context: models.Viagem:setResponsavel(Lmodels/Usuario;)V
   * Goal 20. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 21. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I4 Branch 12 IF_ACMPNE L205 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 22. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I12 Branch 13 IFNONNULL L208 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 23. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I21 Branch 14 IFNE L211 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 24. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I37 Branch 15 IF_ACMPEQ L215 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 25. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I46 Branch 16 IFNONNULL L218 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 26. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I51 Branch 17 IFNULL L219 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 27. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I72 Branch 19 IFNONNULL L225 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 28. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I77 Branch 20 IFNULL L226 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 29. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I98 Branch 22 IFNONNULL L232 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 30. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I103 Branch 23 IFNULL L233 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 31. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I124 Branch 25 IFNONNULL L239 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 32. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I129 Branch 26 IFNULL L240 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 33. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I150 Branch 28 IFNONNULL L246 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 34. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I155 Branch 29 IFNULL L247 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 35. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I176 Branch 31 IFNONNULL L253 - true in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 36. Branch models.Viagem.equals(Ljava/lang/Object;)Z: I193 Branch 33 IFNE L257 - false in context: models.Viagem:equals(Ljava/lang/Object;)Z
   * Goal 37. [Output]: models.Viagem.equals(Ljava/lang/Object;)Z:False
   * Goal 38. models.Viagem.<init>()V: Line 70
   * Goal 39. models.Viagem.<init>()V: Line 71
   * Goal 40. models.Viagem.equals(Ljava/lang/Object;)Z: Line 205
   * Goal 41. models.Viagem.equals(Ljava/lang/Object;)Z: Line 208
   * Goal 42. models.Viagem.equals(Ljava/lang/Object;)Z: Line 211
   * Goal 43. models.Viagem.equals(Ljava/lang/Object;)Z: Line 214
   * Goal 44. models.Viagem.equals(Ljava/lang/Object;)Z: Line 215
   * Goal 45. models.Viagem.equals(Ljava/lang/Object;)Z: Line 218
   * Goal 46. models.Viagem.equals(Ljava/lang/Object;)Z: Line 219
   * Goal 47. models.Viagem.equals(Ljava/lang/Object;)Z: Line 225
   * Goal 48. models.Viagem.equals(Ljava/lang/Object;)Z: Line 226
   * Goal 49. models.Viagem.equals(Ljava/lang/Object;)Z: Line 232
   * Goal 50. models.Viagem.equals(Ljava/lang/Object;)Z: Line 233
   * Goal 51. models.Viagem.equals(Ljava/lang/Object;)Z: Line 239
   * Goal 52. models.Viagem.equals(Ljava/lang/Object;)Z: Line 240
   * Goal 53. models.Viagem.equals(Ljava/lang/Object;)Z: Line 246
   * Goal 54. models.Viagem.equals(Ljava/lang/Object;)Z: Line 247
   * Goal 55. models.Viagem.equals(Ljava/lang/Object;)Z: Line 253
   * Goal 56. models.Viagem.equals(Ljava/lang/Object;)Z: Line 257
   * Goal 57. models.Viagem.equals(Ljava/lang/Object;)Z: Line 258
   * Goal 58. models.Viagem.setResponsavel(Lmodels/Usuario;)V: Line 156
   * Goal 59. models.Viagem.setResponsavel(Lmodels/Usuario;)V: Line 157
   * Goal 60. [METHOD] models.Viagem.<init>()V
   * Goal 61. [METHOD] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 62. [METHOD] models.Viagem.setResponsavel(Lmodels/Usuario;)V
   * Goal 63. [METHODNOEX] models.Viagem.<init>()V
   * Goal 64. [METHODNOEX] models.Viagem.equals(Ljava/lang/Object;)Z
   * Goal 65. [METHODNOEX] models.Viagem.setResponsavel(Lmodels/Usuario;)V
   * Goal 66. Weak Mutation 136: models.Viagem.equals(Ljava/lang/Object;)Z:205 - ReplaceComparisonOperator != -> ==
   * Goal 67. Weak Mutation 138: models.Viagem.equals(Ljava/lang/Object;)Z:208 - ReplaceComparisonOperator != null -> = null
   * Goal 68. Weak Mutation 140: models.Viagem.equals(Ljava/lang/Object;)Z:211 - ReplaceComparisonOperator != -> ==
   * Goal 69. Weak Mutation 142: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceVariable other -> this
   * Goal 70. Weak Mutation 143: models.Viagem.equals(Ljava/lang/Object;)Z:215 - ReplaceComparisonOperator == -> !=
   * Goal 71. Weak Mutation 145: models.Viagem.equals(Ljava/lang/Object;)Z:218 - ReplaceComparisonOperator != null -> = null
   * Goal 72. Weak Mutation 146: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceVariable other -> this
   * Goal 73. Weak Mutation 147: models.Viagem.equals(Ljava/lang/Object;)Z:219 - ReplaceComparisonOperator = null -> != null
   * Goal 74. Weak Mutation 154: models.Viagem.equals(Ljava/lang/Object;)Z:225 - ReplaceComparisonOperator != null -> = null
   * Goal 75. Weak Mutation 155: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceVariable other -> this
   * Goal 76. Weak Mutation 156: models.Viagem.equals(Ljava/lang/Object;)Z:226 - ReplaceComparisonOperator = null -> != null
   * Goal 77. Weak Mutation 163: models.Viagem.equals(Ljava/lang/Object;)Z:232 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 164: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceVariable other -> this
   * Goal 79. Weak Mutation 165: models.Viagem.equals(Ljava/lang/Object;)Z:233 - ReplaceComparisonOperator = null -> != null
   */

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Usuario usuario0 = new Usuario();
      viagem0.setResponsavel(usuario0);
      Viagem viagem1 = new Viagem();
      boolean boolean0 = viagem0.equals(viagem1);
      assertFalse(boolean0);
  }

  //Test case number: 35
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.getLocal()Ljava/lang/String;: root-Branch
   * Goal 3. Branch models.Viagem.getLocal()Ljava/lang/String;: root-Branch in context: models.Viagem:getLocal()Ljava/lang/String;
   * Goal 4. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 5. [Output]: models.Viagem.getLocal()Ljava/lang/String;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getLocal()Ljava/lang/String;: Line 112
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getLocal()Ljava/lang/String;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getLocal()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      String string0 = viagem0.getLocal();
      assertNull(string0);
  }

  //Test case number: 36
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.<init>()V: root-Branch
   * Goal 2. models.Viagem.getDataFim()Ljava/lang/String;: root-Branch
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.getDataFim()Ljava/lang/String;: root-Branch in context: models.Viagem:getDataFim()Ljava/lang/String;
   * Goal 5. [Output]: models.Viagem.getDataFim()Ljava/lang/String;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getDataFim()Ljava/lang/String;: Line 128
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getDataFim()Ljava/lang/String;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getDataFim()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      String string0 = viagem0.getDataFim();
      assertNull(string0);
  }

  //Test case number: 37
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.getId()Ljava/lang/Long;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.getId()Ljava/lang/Long;: root-Branch in context: models.Viagem:getId()Ljava/lang/Long;
   * Goal 5. [Output]: models.Viagem.getId()Ljava/lang/Long;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getId()Ljava/lang/Long;: Line 83
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getId()Ljava/lang/Long;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getId()Ljava/lang/Long;
   */

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      Long long0 = viagem0.getId();
      assertNull(long0);
  }

  //Test case number: 38
  /*
   * 19 covered goals:
   * Goal 1. models.Viagem.setParticipantes(Ljava/util/List;)V: root-Branch
   * Goal 2. models.Viagem.getParticipantes()Ljava/util/List;: root-Branch
   * Goal 3. models.Viagem.<init>()V: root-Branch
   * Goal 4. Branch models.Viagem.getParticipantes()Ljava/util/List;: root-Branch in context: models.Viagem:getParticipantes()Ljava/util/List;
   * Goal 5. Branch models.Viagem.setParticipantes(Ljava/util/List;)V: root-Branch in context: models.Viagem:setParticipantes(Ljava/util/List;)V
   * Goal 6. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 7. [Output]: models.Viagem.getParticipantes()Ljava/util/List;:NonNull:java.util.List:isEmpty()Z:True
   * Goal 8. [Output]: models.Viagem.getParticipantes()Ljava/util/List;:NonNull:java.util.List:size()I:Zero
   * Goal 9. models.Viagem.<init>()V: Line 70
   * Goal 10. models.Viagem.<init>()V: Line 71
   * Goal 11. models.Viagem.getParticipantes()Ljava/util/List;: Line 144
   * Goal 12. models.Viagem.setParticipantes(Ljava/util/List;)V: Line 148
   * Goal 13. models.Viagem.setParticipantes(Ljava/util/List;)V: Line 149
   * Goal 14. [METHOD] models.Viagem.<init>()V
   * Goal 15. [METHOD] models.Viagem.getParticipantes()Ljava/util/List;
   * Goal 16. [METHOD] models.Viagem.setParticipantes(Ljava/util/List;)V
   * Goal 17. [METHODNOEX] models.Viagem.<init>()V
   * Goal 18. [METHODNOEX] models.Viagem.getParticipantes()Ljava/util/List;
   * Goal 19. [METHODNOEX] models.Viagem.setParticipantes(Ljava/util/List;)V
   */

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      List<Usuario> list0 = viagem0.getParticipantes();
      viagem0.setParticipantes(list0);
      assertNull(viagem0.getDataInicio());
  }

  //Test case number: 39
  /*
   * 12 covered goals:
   * Goal 1. models.Viagem.getDataInicio()Ljava/lang/String;: root-Branch
   * Goal 2. models.Viagem.<init>()V: root-Branch
   * Goal 3. Branch models.Viagem.<init>()V: root-Branch in context: models.Viagem:<init>()V
   * Goal 4. Branch models.Viagem.getDataInicio()Ljava/lang/String;: root-Branch in context: models.Viagem:getDataInicio()Ljava/lang/String;
   * Goal 5. [Output]: models.Viagem.getDataInicio()Ljava/lang/String;:Null
   * Goal 6. models.Viagem.<init>()V: Line 70
   * Goal 7. models.Viagem.<init>()V: Line 71
   * Goal 8. models.Viagem.getDataInicio()Ljava/lang/String;: Line 120
   * Goal 9. [METHOD] models.Viagem.<init>()V
   * Goal 10. [METHOD] models.Viagem.getDataInicio()Ljava/lang/String;
   * Goal 11. [METHODNOEX] models.Viagem.<init>()V
   * Goal 12. [METHODNOEX] models.Viagem.getDataInicio()Ljava/lang/String;
   */

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Viagem viagem0 = new Viagem();
      String string0 = viagem0.getDataInicio();
      assertNull(string0);
  }

  //Test case number: 40
  /*
   * 52 covered goals:
   * Goal 1. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch
   * Goal 2. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: root-Branch
   * Goal 3. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: I7 Branch 1 IFEQ L74 - false
   * Goal 4. models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - true
   * Goal 5. models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - false
   * Goal 6. models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - true
   * Goal 7. models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - false
   * Goal 8. Branch models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: root-Branch in context: models.Viagem:<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 9. Branch models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: root-Branch in context: models.Viagem:setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 10. Branch models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: I7 Branch 1 IFEQ L74 - false in context: models.Viagem:inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 11. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I12 Branch 3 IFNE L176 - true in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 12. Branch models.Viagem.addParticipante(Lmodels/Usuario;)V: I6 Branch 2 IFLE L176 - false in context: models.Viagem:addParticipante(Lmodels/Usuario;)V
   * Goal 13. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 98
   * Goal 14. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 99
   * Goal 15. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 100
   * Goal 16. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 101
   * Goal 17. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 102
   * Goal 18. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 103
   * Goal 19. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 104
   * Goal 20. models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V: Line 105
   * Goal 21. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 176
   * Goal 22. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 177
   * Goal 23. models.Viagem.addParticipante(Lmodels/Usuario;)V: Line 179
   * Goal 24. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 74
   * Goal 25. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 75
   * Goal 26. models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V: Line 80
   * Goal 27. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 172
   * Goal 28. models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V: Line 173
   * Goal 29. [METHOD] models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 30. [METHOD] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 31. [METHOD] models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 32. [METHOD] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 33. [METHODNOEX] models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V
   * Goal 34. [METHODNOEX] models.Viagem.addParticipante(Lmodels/Usuario;)V
   * Goal 35. [METHODNOEX] models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V
   * Goal 36. [METHODNOEX] models.Viagem.setInscricaoStrategy(Lmodels/InscricaoStrategy;)V
   * Goal 37. Weak Mutation 0: models.Viagem.inscreverParticipante(Lmodels/Usuario;Ljava/lang/String;)V:74 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 3: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:99 - ReplaceVariable local -> dataFim
   * Goal 39. Weak Mutation 4: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:99 - ReplaceVariable local -> descricao
   * Goal 40. Weak Mutation 5: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:100 - ReplaceVariable dataInicio -> dataFim
   * Goal 41. Weak Mutation 7: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:100 - ReplaceVariable dataInicio -> descricao
   * Goal 42. Weak Mutation 8: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> dataInicio
   * Goal 43. Weak Mutation 9: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> local
   * Goal 44. Weak Mutation 10: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:101 - ReplaceVariable dataFim -> descricao
   * Goal 45. Weak Mutation 11: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> dataInicio
   * Goal 46. Weak Mutation 12: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> dataFim
   * Goal 47. Weak Mutation 13: models.Viagem.<init>(Lmodels/EContinente;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lmodels/Usuario;)V:102 - ReplaceVariable descricao -> local
   * Goal 48. Weak Mutation 14: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator <= -> -1
   * Goal 49. Weak Mutation 15: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator <= -> ==
   * Goal 50. Weak Mutation 17: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 18: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 19: models.Viagem.addParticipante(Lmodels/Usuario;)V:176 - ReplaceComparisonOperator != -> ==
   */

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EContinente eContinente0 = EContinente.AFRICA;
      LinkedList<Usuario> linkedList0 = new LinkedList<Usuario>();
      Usuario usuario0 = new Usuario();
      Viagem viagem0 = new Viagem(eContinente0, "df2YUWOBb@[D{#;", "df2YUWOBb@[D{#;", "", "AMERICA_LATINA", (List<Usuario>) linkedList0, usuario0);
      InscricaoAberta inscricaoAberta0 = new InscricaoAberta();
      viagem0.setInscricaoStrategy(inscricaoAberta0);
      viagem0.inscreverParticipante(usuario0, "qI|7-pFx<9S[^u@g`!4");
      viagem0.addParticipante(usuario0);
      assertEquals(1, linkedList0.size());
      assertEquals("df2YUWOBb@[D{#;", viagem0.getLocal());
  }
}
